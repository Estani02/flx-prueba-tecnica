-- En este archivo deben estar tus ejercicios de consultas sql

-- 1. Empleados ordenados alfabéticamente (Z...A):
-- Muestra los nombres de los empleados en orden alfabético descendente.
SELECT NOMBRE FROM EMPLEADOS ORDER BY NOMBRE DESC;

-- 2. Empleados de Soporte 
-- Muestra el nombre, el puesto y la localidad de los empleados con el puesto de 'Soporte'.
SELECT E.NOMBRE, P.PUESTO, L.LOCALIDAD
FROM EMPLEADOS E
JOIN PUESTOS P ON E.PUESTO_ID = P.ID
JOIN DEPARTAMENTOS D ON E.DEPARTAMENTO_ID = D.ID
JOIN LOCALIDADES L ON D.LOCALIDAD_ID = L.ID
WHERE P.PUESTO = 'Soporte';

-- 3. Nombres que terminan con 'o':  
-- Lista los nombres de los empleados cuyo nombre termina con la letra 'o'.
SELECT NOMBRE FROM EMPLEADOS WHERE NOMBRE LIKE '%o';

-- 4. Empleados en Carlos Paz:  
-- Muestra el nombre, sueldo y localidad de los empleados que trabajan en la localidad Carlos Paz.
SELECT E.NOMBRE, E.SUELDO, L.LOCALIDAD
FROM EMPLEADOS E
JOIN DEPARTAMENTOS D ON E.DEPARTAMENTO_ID = D.ID
JOIN LOCALIDADES L ON D.LOCALIDAD_ID = L.ID
WHERE L.LOCALIDAD = 'Carlos Paz'; 

-- 5. Sueldos entre 10000 y 13000:  
-- Muestra el nombre, sueldo y localidad de los empleados cuyo sueldo se encuentra entre 10000 y 13000.
SELECT E.NOMBRE, E.SUELDO, L.LOCALIDAD
FROM EMPLEADOS E
JOIN DEPARTAMENTOS D ON E.DEPARTAMENTO_ID = D.ID
JOIN LOCALIDADES L ON D.LOCALIDAD_ID = L.ID
WHERE E.SUELDO BETWEEN 10000 AND 13000;

-- 6. Departamentos con más de 5 empleados:  
-- Visualiza los departamentos que tienen más de 5 empleados.
SELECT D.DENOMINACION
FROM EMPLEADOS E
JOIN DEPARTAMENTOS D ON E.DEPARTAMENTO_ID = D.ID
GROUP BY D.DENOMINACION
HAVING COUNT(E.ID) > 5;

-- 7. Empleados en Córdoba con puesto de Analista o Programador:  
-- Muestra los nombres de los empleados que trabajan en Córdoba y tienen el puesto de 'Analista' o 'Programador'.
SELECT E.NOMBRE
FROM EMPLEADOS E
JOIN DEPARTAMENTOS D ON E.DEPARTAMENTO_ID = D.ID
JOIN LOCALIDADES L ON D.LOCALIDAD_ID = L.ID
JOIN PUESTOS P ON E.PUESTO_ID = P.ID
WHERE L.LOCALIDAD = 'Córdoba' AND (P.PUESTO = 'Analista' OR P.PUESTO = 'Programador');

-- 8. Sueldo medio de todos los empleados:  
-- Calcula el sueldo medio de todos los empleados.
SELECT AVG(SUELDO) FROM EMPLEADOS;

-- 9. Máximo sueldo en el departamento 10:  
-- Muestra el máximo sueldo de los empleados del departamento 10.
SELECT MAX(SUELDO) FROM EMPLEADOS WHERE DEPARTAMENTO_ID = 10;

-- 10. Sueldo mínimo en el departamento Soporte:  
-- Calcula el sueldo mínimo de los empleados del departamento 'Soporte'.
SELECT MIN(SUELDO) FROM EMPLEADOS WHERE DEPARTAMENTO_ID = (SELECT ID FROM DEPARTAMENTOS WHERE DENOMINACION = 'Soporte');

-- 11. Suma de sueldos por puesto:  
-- Calcula la suma de sueldos para cada puesto.
SELECT P.PUESTO, SUM(E.SUELDO)
FROM EMPLEADOS E
JOIN PUESTOS P ON E.PUESTO_ID = P.ID
GROUP BY P.PUESTO;


-- DATOS DE PRUEBA PARA LA BASE DE DATOS

-- CREATE DATABASE Empresa_Prueba;

-- CREATE TABLE LOCALIDADES (
--     ID SERIAL PRIMARY KEY,
--     ACTIVO INTEGER NOT NULL,
--     LOCALIDAD VARCHAR(80) NOT NULL
-- );

-- CREATE TABLE DEPARTAMENTOS (
--     ID SERIAL PRIMARY KEY,
--     DENOMINACION VARCHAR(80) NOT NULL,
--     LOCALIDAD_ID INT,
--     FOREIGN KEY (LOCALIDAD_ID) REFERENCES LOCALIDADES(ID)
-- );

-- CREATE TABLE PUESTOS (
--     ID SERIAL PRIMARY KEY,
--     ACTIVO INTEGER NOT NULL,
--     PUESTO VARCHAR(80) NOT NULL
-- );

-- CREATE TABLE EMPLEADOS (
--     ID SERIAL PRIMARY KEY,
--     APELLIDO VARCHAR(80) NOT NULL,
--     COMISION NUMERIC,
--     DEPARTAMENTO_ID INT,
--     FECHAALTA DATE,
--     NOMBRE VARCHAR(80) NOT NULL,
--     PUESTO_ID INT,
--     SUELDO NUMERIC,
--     FOREIGN KEY (DEPARTAMENTO_ID) REFERENCES DEPARTAMENTOS(ID),
--     FOREIGN KEY (PUESTO_ID) REFERENCES PUESTOS(ID)
-- );

-- INSERT INTO LOCALIDADES (ACTIVO, LOCALIDAD) VALUES (1, 'Córdoba');
-- INSERT INTO LOCALIDADES (ACTIVO, LOCALIDAD) VALUES (1, 'Carlos Paz');
-- INSERT INTO LOCALIDADES (ACTIVO, LOCALIDAD) VALUES (1, 'Villa María');

-- INSERT INTO DEPARTAMENTOS (DENOMINACION, LOCALIDAD_ID) VALUES ('Soporte', 1);
-- INSERT INTO DEPARTAMENTOS (DENOMINACION, LOCALIDAD_ID) VALUES ('Desarrollo', 1);
-- INSERT INTO DEPARTAMENTOS (DENOMINACION, LOCALIDAD_ID) VALUES ('Administración', 2);
-- INSERT INTO DEPARTAMENTOS (DENOMINACION, LOCALIDAD_ID) VALUES ('Ventas', 3);

-- INSERT INTO PUESTOS (ACTIVO, PUESTO) VALUES (1, 'Analista');
-- INSERT INTO PUESTOS (ACTIVO, PUESTO) VALUES (1, 'Programador');
-- INSERT INTO PUESTOS (ACTIVO, PUESTO) VALUES (1, 'Soporte');

-- INSERT INTO EMPLEADOS (APELLIDO, COMISION, DEPARTAMENTO_ID, FECHAALTA, NOMBRE, PUESTO_ID, SUELDO) VALUES ('Pérez', 1000, 1, '2020-01-01', 'Juan', 1, 10000);
-- INSERT INTO EMPLEADOS (APELLIDO, COMISION, DEPARTAMENTO_ID, FECHAALTA, NOMBRE, PUESTO_ID, SUELDO) VALUES ('Gómez', 2000, 2, '2020-01-01', 'María', 2, 12000);
-- INSERT INTO EMPLEADOS (APELLIDO, COMISION, DEPARTAMENTO_ID, FECHAALTA, NOMBRE, PUESTO_ID, SUELDO) VALUES ('Rodríguez', 3000, 3, '2020-01-01', 'Carlos', 3, 13000);
-- INSERT INTO EMPLEADOS (APELLIDO, COMISION, DEPARTAMENTO_ID, FECHAALTA, NOMBRE, PUESTO_ID, SUELDO) VALUES ('Fernández', 4000, 4, '2020-01-01', 'Ana', 1, 14000);
-- INSERT INTO EMPLEADOS (APELLIDO, COMISION, DEPARTAMENTO_ID, FECHAALTA, NOMBRE, PUESTO_ID, SUELDO) VALUES ('López', 5000, 1, '2020-01-01', 'Pedro', 2, 15000);
-- INSERT INTO EMPLEADOS (APELLIDO, COMISION, DEPARTAMENTO_ID, FECHAALTA, NOMBRE, PUESTO_ID, SUELDO) VALUES ('Martínez', 6000, 1, '2020-01-01', 'Laura', 3, 16000);
-- INSERT INTO EMPLEADOS (APELLIDO, COMISION, DEPARTAMENTO_ID, FECHAALTA, NOMBRE, PUESTO_ID, SUELDO) VALUES ('García', 7000, 1, '2020-01-01', 'Diego', 1, 17000);
-- INSERT INTO EMPLEADOS (APELLIDO, COMISION, DEPARTAMENTO_ID, FECHAALTA, NOMBRE, PUESTO_ID, SUELDO) VALUES ('Sánchez', 8000, 1, '2020-01-01', 'Silvia', 2, 18000);
-- INSERT INTO EMPLEADOS (APELLIDO, COMISION, DEPARTAMENTO_ID, FECHAALTA, NOMBRE, PUESTO_ID, SUELDO) VALUES ('Romero', 9000, 1, '2020-01-01', 'Jorge', 3, 19000);